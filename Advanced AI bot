import google.generativeai as palm
import gradio as gr
from gradio.components import Textbox, HTML

palm.configure(api_key='AIzaSyA2yHp9pFT9ILN_z3JH_F2wZty65QSYvLU')
models = [m for m in palm.list_models() if 'generateText' in m.supported_generation_methods]
model = models[0].name

sciquestions = [
    "Consider yourself as a science teacher and explain the below question to the students in friendly and in easly understandable form by giving the daily life example and adding less history to the content directly approching the matter.and please note to use word 'student' at the stary of the sentance {}:"
]
hisquestion = [
    "Consider yourself as a History teacher and explain the below question to the students in friendly and easly understandable form by telling it in story manner. and please note to use word 'student' at the stary of the sentance  {}:"
]

def  chatbot(text):
    completion = palm.generate_text(
        model=model,
        prompt=text,
        temperature=0,
        # The maximum length of the response
        max_output_tokens=800,
    )
    return completion.result

def respond(input_text):
    if input_text:
        x=input_text.lower
        question1 = "Is {} a related to science? Reply True or False"
        question2="is {} a related to history of kings? Reply True or False"

        if "true" in chatbot(question1.format(input_text)).lower():
            call = chatbot(sciquestions[0].format(input_text))
        elif "true" in chatbot(question2.format(input_text)).lower():
            call = chatbot(hisquestion[0].format(input_text))
        else:
            call = "No relevant question found."
        return call

inputs = Textbox(lines=2, label="Chat with AI")
outputs = HTML(label="Reply")
go = gr.Interface(
    fn = respond,
    inputs=gr.inputs.Textbox(lines=1),
    outputs=outputs,
)
go.launch()
